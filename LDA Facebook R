#Packages
library(topicmodels)
library(dplyr)
library(tidytext)
library(tm)
library(readr)

#Data in data.frame remove extra columns
HC <- read_excel("data.xlsx")
View(HC)
HC.df <- data.frame(HC)
#Cleaning
HC.df2 <- data.frame(select(HC, -X__1,-X__2,-X__3,-X__4,-X__5,-X__6))
HCdf <- HC.df2
rm(HC.df2)
rm(HC.df)

#Make tidy
hc_mess <- HCdf %>%
  unnest_tokens(word, status_message)
data("stop_words")
custom_stop_words <- bind_rows(
  data_frame(word = c("http", "0083", "bit.ly", "on.msnbc.com", "nyti.ms", "na"), lexicon = c("custom")), stop_words)
hc_mess <- hc_mess %>%
  anti_join(custom_stop_words)
hc_mess %>%
  count(word, sort=TRUE)

#Graph of words used more than 10 times
hc_mess %>%
  count(word, sort = TRUE) %>%
  filter(n > 10) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

#Getting to format used in LDA (Document Term Matrix)
myCorpus <- Corpus(VectorSource(HCdf$status_message))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords('english'), "http", "0083", "bit.ly", "on.msnbc.com", "nyti.ms", "na")
myCorpus <- tm_map(myCorpus, removeWords, c(custom_stop_words[[1]]))
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
#By word stems
tdm <- DocumentTermMatrix(myCorpus, control = list(wordLengths = c(1, Inf)))
#non-stemmed words
tdm2 <- DocumentTermMatrix(myCorpusCopy, control = list(wordLengths = c(1, Inf)))
#removing empty documents
rowTotals <- apply(tdm , 1, sum)
tdm.new   <- tdm[rowTotals> 0, ]

#Quick LDA 3 topics
hc_lda <- LDA(tdm.new, k=3)
summary(hc_lda)
hc_topics <- tidy(hc_lda, matrix = "beta")
#Shows all betas for each word
hc_topics

hc_top_terms <- hc_topics %>%
  group_by(topic) %>%
  top_n(10, beta) %>%
  ungroup() %>%
  arrange(topic, -beta)

#Graph of highest beta for each topic
hc_top_terms %>%
  mutate(term = reorder(term, beta)) %>%
  ggplot(aes(term, beta, fill = factor(topic))) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~ topic, scales = "free") +
  coord_flip()
